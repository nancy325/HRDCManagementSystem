@model HRDCManagementSystem.Models.ViewModels.TrainingViewModel

@{
    ViewData["Title"] = "Edit Training Program";
}

<h2>Edit Training Program</h2>

<hr />

<form asp-action="EditTraining" asp-controller="Training" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <!-- Hidden Primary Key -->
    <input type="hidden" asp-for="TrainingSysID" />

    <div class="form-group">
        <label asp-for="Title" class="control-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="TrainerName" class="control-label"></label>
        <input asp-for="TrainerName" class="form-control" />
        <span asp-validation-for="TrainerName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="StartDate">Start Date</label>
        <input asp-for="StartDate" type="text" class="form-control datepicker" id="StartDate" />
        <span asp-validation-for="StartDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="EndDate">End Date</label>
        <input asp-for="EndDate" type="text" class="form-control datepicker" id="EndDate" />
        <span asp-validation-for="EndDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="FromTime" class="control-label"></label>
        <input asp-for="FromTime" type="time" class="form-control" />
        <span asp-validation-for="FromTime" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ToTime" class="control-label"></label>
        <input asp-for="ToTime" type="time" class="form-control" />
        <span asp-validation-for="ToTime" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="ValidTill">Valid Till</label>
        <input asp-for="ValidTill" type="text" class="form-control datepicker" id="ValidTill" />
        <span asp-validation-for="ValidTill" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Venue" class="control-label"></label>
        <input asp-for="Venue" class="form-control" />
        <span asp-validation-for="Venue" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EligibilityType" class="control-label"></label>
        <select asp-for="EligibilityType" class="form-control">
            <option value="">-- Select Eligibility --</option>
            <option value="Technical">Technical</option>
            <option value="Non-Technical">Non-Technical</option>
        </select>
        <span asp-validation-for="EligibilityType" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Capacity" class="control-label"></label>
        <input asp-for="Capacity" type="number" class="form-control" />
        <span asp-validation-for="Capacity" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="FilePath" class="control-label"></label>
        <input asp-for="FilePath" type="file" class="form-control" />
        <span asp-validation-for="FilePath" class="text-danger"></span>

        @if (!string.IsNullOrEmpty(Model.ExistingPath))
        {
            <div class="mt-2">
                <small class="text-muted">Current File: </small>
                <a href="@Url.Content(Model.ExistingPath)" target="_blank" class="text-primary">
                    <i class="fas fa-file"></i> View File
                </a>
            </div>
        }
    </div>


    <div class="form-group">
        <label asp-for="Mode" class="control-label"></label>
        <select asp-for="Mode" class="form-control">
            <option value="">-- Select Mode --</option>
            <option value="Online">Online</option>
            <option value="Offline">Offline</option>
        </select>
        <span asp-validation-for="Mode" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Status" class="control-label"></label>
        <select asp-for="Status" class="form-control">
            <option value="">-- Select Status --</option>
            <option value="Draft">Draft</option>
            <option value="Published">Published</option>
        </select>
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>

    <div class="form-group form-check">
        <input asp-for="IsMarksEntry" type="checkbox" class="form-check-input" id="isMarksEntryCheckbox" />
        <label asp-for="IsMarksEntry" class="form-check-label">Enable Marks Entry</label>
    </div>

    <div class="form-group">
        <label asp-for="MarksOutOf" class="control-label">Marks Out Of</label>
        @if (Model.IsMarksEntry)
        {
            <input asp-for="MarksOutOf" type="number" class="form-control" id="marksOutOfField" />
        }
        else
        {
            <input asp-for="MarksOutOf" type="number" class="form-control" id="marksOutOfField" disabled />
        }
        <span asp-validation-for="MarksOutOf" class="text-danger"></span>
    </div>

    <br />

    <div class="form-group">
        <input type="submit" value="Update" class="btn btn-primary" />
        <a asp-action="TrainingIndex" class="btn btn-secondary">Cancel</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const checkbox = document.getElementById("isMarksEntryCheckbox");
            const marksOutOf = document.getElementById("marksOutOfField");

            function toggleMarksOutOf() {
                marksOutOf.disabled = !checkbox.checked;
            }

            checkbox.addEventListener("change", toggleMarksOutOf);
            toggleMarksOutOf();
        });
    </script>
}
